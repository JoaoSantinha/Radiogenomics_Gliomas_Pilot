setting:
  # Normalization:
  # MR signal is usually relative, with large differences between scanners and vendors. By normalizing the image before
  # feature calculation, this confounding effect may be reduced. However, if only one specific scanner is used, or the
  # images reflect some absolute world value (e.g. ADC maps, T2maps (NOT T2 weighted)), consider disabling the
  # normalization.
  normalize: true
  normalizeScale: 100  # This allows you to use more or less the same bin width.

  # Resampling:
  # Not enabled in this example. However, because texture calculation assumes isotropic spacing, a forced 2D extraction
  # is used, therefore only requiring the voxels to be isotropic in-plane. Enable pre-cropping to reduce memory
  # footprint and speed up applying the filters.
  preCrop: true
  interpolator: 'sitkBSpline'
  resampledPixelSpacing: [1.015625, 1.015625, 0]

  # Forced 2D extracion:
  # This allows to calculate texture features using anisotropic voxels (although it assumes that voxels are isotropic
  # in-plane). This is an alternative to resampling the image to isotropic voxels.
  force2D: true
  force2Ddimension: 2  # axial slices, for coronal slices, use dimension 1 and for sagittal, dimension 2.

  # Mask validation:
  # correctMask and geometryTolerance are not needed, as both image and mask are resampled, if you expect very small
  # masks, consider to enable a size constraint by uncommenting settings below:
  #minimumROIDimensions: 2
  #minimumROISize: 50
  resegmentMode: 'sigma'
  resegmentRange: [-3, 3]

  # Image discretization:
  # The ideal number of bins is somewhere in the order of 16-128 bins. A possible way to define a good binwidt is to
  # extract firstorder:Range from the dataset to analyze, and choose a binwidth so, that range/binwidth remains approximately
  # in this range of bins.
  binWidth: 2

  # first order specific settings:
  # When normalizing, gray values below the mean will be negative. Shifting by 300 (3 StdDevs * 100) ensures that the
  # majority of voxels is positive (only outliers >3 SD lower than the mean will be negative).
  voxelArrayShift: 300

  # Misc:
  # default label value. Labels can also be defined in the call to featureextractor.execute, as a commandline argument,
  # or in a column "Label" in the input csv (batchprocessing)
  label: 3

  # Tolerance definition
  geometryTolerance: 1.0e+03

# Input images to use: original for unfiltered image and/or any other filters, see documentation of featureextractor.py
# for possible values
imageType:
  Original: {} # for dictionaries / mappings, None values are not allowed, '{}' is interpreted as an empty dictionary
  LoG: {'sigma': [1.015625, 2, 3]}
  Wavelet: {'level': 2} #
#  Square: {}
#  SquareRoot: {}
#  Logarithm: {}
#  Exponential: {}

# Featureclasses, from which features must be calculated. If a featureclass is not mentioned, no features are calculated
# for that class. Otherwise, the specified features are calculated, or, if none are specified, all are calculated.
featureClass:
  shape: # for lists none values are allowed, in this case, all features are enabled
  firstorder: [] # specifying an empty list has the same effect as specifying nothing.
  glcm:
  glrlm:
  glszm:
  ngtdm:
  gldm:
